export const aayushHandPickedProblems = [
  // Two Pointer Patterns
  {
    category: "Two Pointer Patterns",
    problems: [
      { id: 1, title: "Two Sum", difficulty: "Easy" },
      { id: 11, title: "Container With Most Water", difficulty: "Medium" },
      { id: 15, title: "3Sum", difficulty: "Medium" },
      { id: 16, title: "3Sum Closest", difficulty: "Medium" },
      { id: 18, title: "4Sum", difficulty: "Medium" },
      { id: 167, title: "Two Sum II - Input Array Is Sorted", difficulty: "Medium" },
      { id: 349, title: "Intersection of Two Arrays", difficulty: "Easy" },
      { id: 881, title: "Boats to Save People", difficulty: "Medium" },
      { id: 977, title: "Squares of a Sorted Array", difficulty: "Easy" },
      { id: 259, title: "3Sum Smaller", difficulty: "Medium" },
      { id: 141, title: "Linked List Cycle", difficulty: "Easy" },
      { id: 202, title: "Happy Number", difficulty: "Easy" },
      { id: 287, title: "Find the Duplicate Number", difficulty: "Medium" },
      { id: 392, title: "Is Subsequence", difficulty: "Easy" },
      { id: 19, title: "Remove Nth Node From End of List", difficulty: "Medium" },
      { id: 876, title: "Middle of the Linked List", difficulty: "Easy" },
      { id: 2095, title: "Delete the Middle Node of a Linked List", difficulty: "Medium" },
      { id: 26, title: "Remove Duplicates from Sorted Array", difficulty: "Easy" },
      { id: 27, title: "Remove Element", difficulty: "Easy" },
      { id: 75, title: "Sort Colors", difficulty: "Medium" },
      { id: 80, title: "Remove Duplicates from Sorted Array II", difficulty: "Medium" },
      { id: 283, title: "Move Zeroes", difficulty: "Easy" },
      { id: 443, title: "String Compression", difficulty: "Medium" },
      { id: 905, title: "Sort Array By Parity", difficulty: "Easy" },
      { id: 2337, title: "Move Pieces to Obtain a String", difficulty: "Medium" },
      { id: 2938, title: "Separate Black and White Balls", difficulty: "Medium" },
      { id: 844, title: "Backspace String Compare", difficulty: "Easy" },
      { id: 5, title: "Longest Palindromic Substring", difficulty: "Medium" },
      { id: 647, title: "Palindromic Substrings", difficulty: "Medium" },
      { id: 151, title: "Reverse Words in a String", difficulty: "Medium" },
      { id: 344, title: "Reverse String", difficulty: "Easy" },
      { id: 345, title: "Reverse Vowels of a String", difficulty: "Easy" },
      { id: 541, title: "Reverse String II", difficulty: "Easy" }
    ]
  },
  // Sliding Window Patterns
  {
    category: "Sliding Window Patterns",
    problems: [
      { id: 346, title: "Moving Average from Data Stream", difficulty: "Easy" },
      { id: 643, title: "Maximum Average Subarray I", difficulty: "Easy" },
      { id: 2985, title: "Calculate Compressed Mean", difficulty: "Easy" },
      { id: 3254, title: "Find the Power of K-Size Subarrays I", difficulty: "Medium" },
      { id: 3318, title: "Find X-Sum of All K-Long Subarrays I", difficulty: "Medium" },
      { id: 3, title: "Longest Substring Without Repeating Characters", difficulty: "Medium" },
      { id: 76, title: "Minimum Window Substring", difficulty: "Hard" },
      { id: 209, title: "Minimum Size Subarray Sum", difficulty: "Medium" },
      { id: 219, title: "Contains Duplicate II", difficulty: "Easy" },
      { id: 424, title: "Longest Repeating Character Replacement", difficulty: "Medium" },
      { id: 713, title: "Subarray Product Less Than K", difficulty: "Medium" },
      { id: 904, title: "Fruit Into Baskets", difficulty: "Medium" },
      { id: 1004, title: "Max Consecutive Ones III", difficulty: "Medium" },
      { id: 1438, title: "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit", difficulty: "Medium" },
      { id: 1493, title: "Longest Subarray of 1's After Deleting One Element", difficulty: "Medium" },
      { id: 1658, title: "Minimum Operations to Reduce X to Zero", difficulty: "Medium" },
      { id: 1838, title: "Frequency of the Most Frequent Element", difficulty: "Medium" },
      { id: 2461, title: "Maximum Sum of Distinct Subarrays With Length K", difficulty: "Medium" },
      { id: 2516, title: "Take K of Each Character From Left and Right", difficulty: "Medium" },
      { id: 2762, title: "Continuous Subarrays", difficulty: "Medium" },
      { id: 2779, title: "Maximum Beauty of an Array After Applying Operation", difficulty: "Medium" },
      { id: 2981, title: "Find Longest Special Substring That Occurs Thrice I", difficulty: "Medium" },
      { id: 3026, title: "Maximum Good Subarray Sum", difficulty: "Medium" },
      { id: 3346, title: "Maximum Frequency of an Element After Performing Operations I", difficulty: "Medium" },
      { id: 3347, title: "Maximum Frequency of an Element After Performing Operations II", difficulty: "Medium" },
      { id: 239, title: "Sliding Window Maximum", difficulty: "Hard" },
      { id: 862, title: "Shortest Subarray with Sum at Least K", difficulty: "Hard" },
      { id: 1696, title: "Jump Game VI", difficulty: "Medium" },
      { id: 438, title: "Find All Anagrams in a String", difficulty: "Medium" },
      { id: 567, title: "Permutation in String", difficulty: "Medium" }
    ]
  },
  // Tree Traversal Patterns
  {
    category: "Tree Traversal Patterns",
    problems: [
      { id: 102, title: "Binary Tree Level Order Traversal", difficulty: "Medium" },
      { id: 103, title: "Binary Tree Zigzag Level Order Traversal", difficulty: "Medium" },
      { id: 199, title: "Binary Tree Right Side View", difficulty: "Medium" },
      { id: 515, title: "Find Largest Value in Each Tree Row", difficulty: "Medium" },
      { id: 1161, title: "Maximum Level Sum of a Binary Tree", difficulty: "Medium" },
      { id: 100, title: "Same Tree", difficulty: "Easy" },
      { id: 101, title: "Symmetric Tree", difficulty: "Easy" },
      { id: 105, title: "Construct Binary Tree from Preorder and Inorder Traversal", difficulty: "Medium" },
      { id: 114, title: "Flatten Binary Tree to Linked List", difficulty: "Medium" },
      { id: 226, title: "Invert Binary Tree", difficulty: "Easy" },
      { id: 257, title: "Binary Tree Paths", difficulty: "Easy" },
      { id: 988, title: "Smallest String Starting From Leaf", difficulty: "Medium" },
      { id: 94, title: "Binary Tree Inorder Traversal", difficulty: "Easy" },
      { id: 98, title: "Validate Binary Search Tree", difficulty: "Medium" },
      { id: 173, title: "Binary Search Tree Iterator", difficulty: "Medium" },
      { id: 230, title: "Kth Smallest Element in a BST", difficulty: "Medium" },
      { id: 501, title: "Find Mode in Binary Search Tree", difficulty: "Easy" },
      { id: 530, title: "Minimum Absolute Difference in BST", difficulty: "Easy" },
      { id: 104, title: "Maximum Depth of Binary Tree", difficulty: "Easy" },
      { id: 110, title: "Balanced Binary Tree", difficulty: "Easy" },
      { id: 124, title: "Binary Tree Maximum Path Sum", difficulty: "Hard" },
      { id: 145, title: "Binary Tree Postorder Traversal", difficulty: "Easy" },
      { id: 337, title: "House Robber III", difficulty: "Medium" },
      { id: 366, title: "Find Leaves of Binary Tree", difficulty: "Medium" },
      { id: 543, title: "Diameter of Binary Tree", difficulty: "Easy" },
      { id: 863, title: "All Nodes Distance K in Binary Tree", difficulty: "Medium" },
      { id: 1110, title: "Delete Nodes And Return Forest", difficulty: "Medium" },
      { id: 2458, title: "Height of Binary Tree After Subtree Removal Queries", difficulty: "Hard" },
      { id: 235, title: "Lowest Common Ancestor of a Binary Search Tree", difficulty: "Medium" },
      { id: 236, title: "Lowest Common Ancestor of a Binary Tree", difficulty: "Medium" },
      { id: 297, title: "Serialize and Deserialize Binary Tree", difficulty: "Hard" },
      { id: 572, title: "Subtree of Another Tree", difficulty: "Easy" },
      { id: 652, title: "Find Duplicate Subtrees", difficulty: "Medium" }
    ]
  },
  // Dynamic Programming Patterns
  {
    category: "Dynamic Programming Patterns",
    problems: [
      { id: 70, title: "Climbing Stairs", difficulty: "Easy" },
      { id: 91, title: "Decode Ways", difficulty: "Medium" },
      { id: 198, title: "House Robber", difficulty: "Medium" },
      { id: 213, title: "House Robber II", difficulty: "Medium" },
      { id: 337, title: "House Robber III", difficulty: "Medium" },
      { id: 509, title: "Fibonacci Number", difficulty: "Easy" },
      { id: 740, title: "Delete and Earn", difficulty: "Medium" },
      { id: 746, title: "Min Cost Climbing Stairs", difficulty: "Easy" },
      { id: 53, title: "Maximum Subarray", difficulty: "Medium" },
      { id: 322, title: "Coin Change", difficulty: "Medium" },
      { id: 377, title: "Combination Sum IV", difficulty: "Medium" },
      { id: 518, title: "Coin Change II", difficulty: "Medium" },
      { id: 416, title: "Partition Equal Subset Sum", difficulty: "Medium" },
      { id: 494, title: "Target Sum", difficulty: "Medium" },
      { id: 139, title: "Word Break", difficulty: "Medium" },
      { id: 140, title: "Word Break II", difficulty: "Hard" },
      { id: 583, title: "Delete Operation for Two Strings", difficulty: "Medium" },
      { id: 1143, title: "Longest Common Subsequence", difficulty: "Medium" },
      { id: 72, title: "Edit Distance", difficulty: "Hard" },
      { id: 62, title: "Unique Paths", difficulty: "Medium" },
      { id: 63, title: "Unique Paths II", difficulty: "Medium" },
      { id: 64, title: "Minimum Path Sum", difficulty: "Medium" },
      { id: 120, title: "Triangle", difficulty: "Medium" },
      { id: 221, title: "Maximal Square", difficulty: "Medium" },
      { id: 931, title: "Minimum Falling Path Sum", difficulty: "Medium" },
      { id: 1277, title: "Count Square Submatrices with All Ones", difficulty: "Medium" },
      { id: 312, title: "Burst Balloons", difficulty: "Hard" },
      { id: 546, title: "Remove Boxes", difficulty: "Hard" },
      { id: 95, title: "Unique Binary Search Trees II", difficulty: "Medium" },
      { id: 96, title: "Unique Binary Search Trees", difficulty: "Medium" },
      { id: 241, title: "Different Ways to Add Parentheses", difficulty: "Medium" },
      { id: 300, title: "Longest Increasing Subsequence", difficulty: "Medium" },
      { id: 354, title: "Russian Doll Envelopes", difficulty: "Hard" },
      { id: 1671, title: "Minimum Number of Removals to Make Mountain Array", difficulty: "Hard" },
      { id: 2407, title: "Longest Increasing Subsequence II", difficulty: "Hard" }
    ]
  },
  // Binary Search Patterns
  {
    category: "Binary Search Patterns",
    problems: [
      { id: 35, title: "Search Insert Position", difficulty: "Easy" },
      { id: 69, title: "Sqrt(x)", difficulty: "Easy" },
      { id: 74, title: "Search a 2D Matrix", difficulty: "Medium" },
      { id: 278, title: "First Bad Version", difficulty: "Easy" },
      { id: 374, title: "Guess Number Higher or Lower", difficulty: "Easy" },
      { id: 540, title: "Single Element in a Sorted Array", difficulty: "Medium" },
      { id: 704, title: "Binary Search", difficulty: "Easy" },
      { id: 1539, title: "Kth Missing Positive Number", difficulty: "Medium" },
      { id: 33, title: "Search in Rotated Sorted Array", difficulty: "Medium" },
      { id: 81, title: "Search in Rotated Sorted Array II", difficulty: "Medium" },
      { id: 153, title: "Find Minimum in Rotated Sorted Array", difficulty: "Medium" },
      { id: 162, title: "Find Peak Element", difficulty: "Medium" },
      { id: 852, title: "Peak Index in a Mountain Array", difficulty: "Easy" },
      { id: 1095, title: "Find in Mountain Array", difficulty: "Hard" },
      { id: 410, title: "Split Array Largest Sum", difficulty: "Hard" },
      { id: 774, title: "Minimize Max Distance to Gas Station", difficulty: "Hard" },
      { id: 875, title: "Koko Eating Bananas", difficulty: "Medium" },
      { id: 1011, title: "Capacity To Ship Packages Within D Days", difficulty: "Medium" },
      { id: 1482, title: "Minimum Number of Days to Make m Bouquets", difficulty: "Medium" },
      { id: 1760, title: "Minimum Limit of Balls in a Bag", difficulty: "Medium" },
      { id: 2064, title: "Minimized Maximum of Products Distributed to Any Store", difficulty: "Medium" },
      { id: 2226, title: "Maximum Candies Allocated to K Children", difficulty: "Medium" },
      { id: 34, title: "Find First and Last Position of Element in Sorted Array", difficulty: "Medium" },
      { id: 658, title: "Find K Closest Elements", difficulty: "Medium" },
      { id: 4, title: "Median of Two Sorted Arrays", difficulty: "Hard" }
    ]
  },
  // Stack Patterns
  {
    category: "Stack Patterns",
    problems: [
      { id: 20, title: "Valid Parentheses", difficulty: "Easy" },
      { id: 32, title: "Longest Valid Parentheses", difficulty: "Hard" },
      { id: 921, title: "Minimum Add to Make Parentheses Valid", difficulty: "Medium" },
      { id: 1249, title: "Minimum Remove to Make Valid Parentheses", difficulty: "Medium" },
      { id: 1963, title: "Minimum Number of Swaps to Make the String Balanced", difficulty: "Medium" },
      { id: 402, title: "Remove K Digits", difficulty: "Medium" },
      { id: 496, title: "Next Greater Element I", difficulty: "Easy" },
      { id: 503, title: "Next Greater Element II", difficulty: "Medium" },
      { id: 739, title: "Daily Temperatures", difficulty: "Medium" },
      { id: 901, title: "Online Stock Span", difficulty: "Medium" },
      { id: 907, title: "Sum of Subarray Minimums", difficulty: "Medium" },
      { id: 962, title: "Maximum Width Ramp", difficulty: "Medium" },
      { id: 1475, title: "Final Prices With a Special Discount in a Shop", difficulty: "Easy" },
      { id: 1673, title: "Find the Most Competitive Subsequence", difficulty: "Medium" },
      { id: 150, title: "Evaluate Reverse Polish Notation", difficulty: "Medium" },
      { id: 224, title: "Basic Calculator", difficulty: "Hard" },
      { id: 227, title: "Basic Calculator II", difficulty: "Medium" },
      { id: 772, title: "Basic Calculator III", difficulty: "Hard" },
      { id: 71, title: "Simplify Path", difficulty: "Medium" },
      { id: 394, title: "Decode String", difficulty: "Medium" },
      { id: 735, title: "Asteroid Collision", difficulty: "Medium" },
      { id: 155, title: "Min Stack", difficulty: "Easy" },
      { id: 84, title: "Largest Rectangle in Histogram", difficulty: "Hard" },
      { id: 85, title: "Maximal Rectangle", difficulty: "Hard" }
    ]
  },
  // Heap Patterns
  {
    category: "Heap Patterns",
    problems: [
      { id: 215, title: "Kth Largest Element in an Array", difficulty: "Medium" },
      { id: 347, title: "Top K Frequent Elements", difficulty: "Medium" },
      { id: 451, title: "Sort Characters By Frequency", difficulty: "Medium" },
      { id: 506, title: "Relative Ranks", difficulty: "Easy" },
      { id: 703, title: "Kth Largest Element in a Stream", difficulty: "Easy" },
      { id: 973, title: "K Closest Points to Origin", difficulty: "Medium" },
      { id: 1046, title: "Last Stone Weight", difficulty: "Easy" },
      { id: 2558, title: "Take Gifts From the Richest Pile", difficulty: "Easy" },
      { id: 295, title: "Find Median from Data Stream", difficulty: "Hard" },
      { id: 1825, title: "Finding MK Average", difficulty: "Hard" },
      { id: 23, title: "Merge k Sorted Lists", difficulty: "Hard" },
      { id: 373, title: "Find K Pairs with Smallest Sums", difficulty: "Medium" },
      { id: 378, title: "Kth Smallest Element in a Sorted Matrix", difficulty: "Medium" },
      { id: 632, title: "Smallest Range Covering Elements from K Lists", difficulty: "Hard" },
      { id: 253, title: "Meeting Rooms II", difficulty: "Medium" },
      { id: 767, title: "Reorganize String", difficulty: "Medium" },
      { id: 857, title: "Minimum Cost to Hire K Workers", difficulty: "Hard" },
      { id: 1642, title: "Furthest Building You Can Reach", difficulty: "Medium" },
      { id: 1792, title: "Maximum Average Pass Ratio", difficulty: "Medium" },
      { id: 1834, title: "Single-Threaded CPU", difficulty: "Medium" },
      { id: 1942, title: "The Number of the Smallest Unoccupied Chair", difficulty: "Medium" },
      { id: 2402, title: "Meeting Rooms III", difficulty: "Hard" }
    ]
  },
  // Backtracking Patterns
  {
    category: "Backtracking Patterns",
    problems: [
      { id: 17, title: "Letter Combinations of a Phone Number", difficulty: "Medium" },
      { id: 77, title: "Combinations", difficulty: "Medium" },
      { id: 78, title: "Subsets", difficulty: "Medium" },
      { id: 90, title: "Subsets II", difficulty: "Medium" },
      { id: 31, title: "Next Permutation", difficulty: "Medium" },
      { id: 46, title: "Permutations", difficulty: "Medium" },
      { id: 60, title: "Permutation Sequence", difficulty: "Hard" },
      { id: 39, title: "Combination Sum", difficulty: "Medium" },
      { id: 40, title: "Combination Sum II", difficulty: "Medium" },
      { id: 22, title: "Generate Parentheses", difficulty: "Medium" },
      { id: 301, title: "Remove Invalid Parentheses", difficulty: "Hard" },
      { id: 79, title: "Word Search", difficulty: "Medium" },
      { id: 212, title: "Word Search II", difficulty: "Hard" },
      { id: 2018, title: "Check if Word Can Be Placed In Crossword", difficulty: "Medium" },
      { id: 37, title: "Sudoku Solver", difficulty: "Hard" },
      { id: 51, title: "N-Queens", difficulty: "Hard" },
      { id: 131, title: "Palindrome Partitioning", difficulty: "Medium" }
    ]
  },
  // Graph Patterns
  {
    category: "Graph Patterns",
    problems: [
      { id: 130, title: "Surrounded Regions", difficulty: "Medium" },
      { id: 200, title: "Number of Islands", difficulty: "Medium" },
      { id: 417, title: "Pacific Atlantic Water Flow", difficulty: "Medium" },
      { id: 547, title: "Number of Provinces", difficulty: "Medium" },
      { id: 695, title: "Max Area of Island", difficulty: "Medium" },
      { id: 733, title: "Flood Fill", difficulty: "Easy" },
      { id: 841, title: "Keys and Rooms", difficulty: "Medium" },
      { id: 1020, title: "Number of Enclaves", difficulty: "Medium" },
      { id: 1254, title: "Number of Closed Islands", difficulty: "Medium" },
      { id: 1905, title: "Count Sub Islands", difficulty: "Medium" },
      { id: 2101, title: "Detonate the Maximum Bombs", difficulty: "Medium" },
      { id: 127, title: "Word Ladder", difficulty: "Hard" },
      { id: 542, title: "01 Matrix", difficulty: "Medium" },
      { id: 994, title: "Rotting Oranges", difficulty: "Medium" },
      { id: 1091, title: "Shortest Path in Binary Matrix", difficulty: "Medium" },
      { id: 207, title: "Course Schedule", difficulty: "Medium" },
      { id: 210, title: "Course Schedule II", difficulty: "Medium" },
      { id: 802, title: "Find Eventual Safe States", difficulty: "Medium" },
      { id: 1059, title: "All Paths from Source Lead to Destination", difficulty: "Medium" },
      { id: 269, title: "Alien Dictionary", difficulty: "Hard" },
      { id: 310, title: "Minimum Height Trees", difficulty: "Medium" },
      { id: 444, title: "Sequence Reconstruction", difficulty: "Medium" },
      { id: 1136, title: "Parallel Courses", difficulty: "Medium" },
      { id: 1857, title: "Largest Color Value in a Directed Graph", difficulty: "Hard" },
      { id: 2050, title: "Parallel Courses III", difficulty: "Hard" },
      { id: 2115, title: "Find All Possible Recipes from Given Supplies", difficulty: "Medium" },
      { id: 2392, title: "Build a Matrix With Conditions", difficulty: "Hard" },
      { id: 133, title: "Clone Graph", difficulty: "Medium" },
      { id: 743, title: "Network Delay Time", difficulty: "Medium" },
      { id: 778, title: "Swim in Rising Water", difficulty: "Hard" },
      { id: 1514, title: "Path with Maximum Probability", difficulty: "Medium" },
      { id: 1631, title: "Path With Minimum Effort", difficulty: "Medium" },
      { id: 1976, title: "Number of Ways to Arrive at Destination", difficulty: "Medium" },
      { id: 2045, title: "Second Minimum Time to Reach Destination", difficulty: "Hard" },
      { id: 2203, title: "Minimum Weighted Subgraph With the Required Paths", difficulty: "Hard" },
      { id: 2290, title: "Minimum Obstacle Removal to Reach Corner", difficulty: "Medium" },
      { id: 2577, title: "Minimum Time to Visit a Cell In a Grid", difficulty: "Hard" },
      { id: 2812, title: "Find the Safest Path in a Grid", difficulty: "Medium" },
      { id: 787, title: "Cheapest Flights Within K Stops", difficulty: "Medium" },
      { id: 261, title: "Graph Valid Tree", difficulty: "Medium" },
      { id: 305, title: "Number of Islands II", difficulty: "Hard" },
      { id: 323, title: "Number of Connected Components in an Undirected Graph", difficulty: "Medium" },
      { id: 684, title: "Redundant Connection", difficulty: "Medium" },
      { id: 721, title: "Accounts Merge", difficulty: "Medium" },
      { id: 737, title: "Sentence Similarity II", difficulty: "Medium" },
      { id: 947, title: "Most Stones Removed with Same Row or Column", difficulty: "Medium" },
      { id: 952, title: "Largest Component Size by Common Factor", difficulty: "Hard" },
      { id: 959, title: "Regions Cut By Slashes", difficulty: "Medium" },
      { id: 1101, title: "The Earliest Moment When Everyone Become Friends", difficulty: "Medium" }
    ]
  }
];

// Calculate total problems count
export const totalHandPickedProblems = aayushHandPickedProblems.reduce(
  (total, category) => total + category.problems.length, 
  0
);

// Get all problems as a flat array
export const allHandPickedProblems = aayushHandPickedProblems.flatMap(
  category => category.problems
);
